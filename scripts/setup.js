#!/usr/bin/env node

import fs from 'fs';
import path from 'path';

console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∂–µ–Ω—Å–∫–æ–≥–æ —Ü–∏–∫–ª–∞...\n');

// –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
const envPath = '.env';
const envExamplePath = 'env.example';

if (!fs.existsSync(envPath)) {
  if (fs.existsSync(envExamplePath)) {
    fs.copyFileSync(envExamplePath, envPath);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –∏–∑ env.example');
  } else {
    const envContent = `# Telegram Bot Token (–ø–æ–ª—É—á–∏—Ç–µ –æ—Ç @BotFather)
TELEGRAM_BOT_TOKEN=your_bot_token_here

# OpenAI API Key
OPENAI_API_KEY=your_openai_api_key_here

# Database path
DATABASE_PATH=./data/bot.db

# Timezone for notifications (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é Europe/Moscow)
TIMEZONE=Europe/Moscow

# Notification time (24h format, –Ω–∞–ø—Ä–∏–º–µ—Ä: 09:00)
NOTIFICATION_TIME=09:00
`;
    fs.writeFileSync(envPath, envContent);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env');
  }
  console.log('‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –≤ —Ñ–∞–π–ª–µ .env!\n');
} else {
  console.log('‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n');
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
const dataDir = 'data';
if (!fs.existsSync(dataDir)) {
  fs.mkdirSync(dataDir);
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ data –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
} else {
  console.log('‚úÖ –ü–∞–ø–∫–∞ data —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
}

console.log('\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç @BotFather –≤ Telegram');
console.log('2. –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á OpenAI –Ω–∞ platform.openai.com');
console.log('3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ .env');
console.log('4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: npm start\n');

console.log('üìö –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ README.md');
