#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç—É—é –∏ –∫—Ä–∞—Å–∏–≤—É—é –∞–≤–∞—Ç–∞—Ä–∫—É –¥–ª—è Telegram –±–æ—Ç–∞
–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —Ä–∞–∑–º–µ—Ä–æ–≤ Telegram (512x512)
"""

from PIL import Image, ImageDraw, ImageFont
import math

def create_simple_avatar():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç—É—é, –Ω–æ –∫—Ä–∞—Å–∏–≤—É—é –∞–≤–∞—Ç–∞—Ä–∫—É"""
    
    # –†–∞–∑–º–µ—Ä –¥–ª—è Telegram
    size = 512
    img = Image.new('RGB', (size, size), (255, 182, 193))  # –†–æ–∑–æ–≤—ã–π —Ñ–æ–Ω
    draw = ImageDraw.Draw(img)
    
    center = size // 2
    
    # –°–æ–∑–¥–∞–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
    for i in range(size):
        for j in range(size):
            distance = math.sqrt((i - center)**2 + (j - center)**2)
            if distance < center:
                ratio = distance / center
                # –ì—Ä–∞–¥–∏–µ–Ω—Ç –æ—Ç —Ä–æ–∑–æ–≤–æ–≥–æ –∫ —Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–º—É
                r = int(255 - ratio * 80)
                g = int(182 - ratio * 80) 
                b = int(193 + ratio * 40)
                
                # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
                r = max(0, min(255, r))
                g = max(0, min(255, g))
                b = max(0, min(255, b))
                
                img.putpixel((i, j), (r, g, b))
    
    # –†–∏—Å—É–µ–º –∫—Ä—É–≥ —Ü–∏–∫–ª–∞
    cycle_radius = 180
    for day in range(28):
        angle = day * (2 * math.pi / 28) - math.pi / 2
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∞–∑—É –∏ —Ü–≤–µ—Ç —Ç–æ—á–∫–∏
        if day < 5:  # –ú–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏—è
            color = (255, 255, 255)  # –ë–µ–ª—ã–π
            size_dot = 8
        elif day < 13:  # –§–æ–ª–ª–∏–∫—É–ª—è—Ä–Ω–∞—è
            color = (255, 255, 255)  # –ë–µ–ª—ã–π
            size_dot = 6
        elif day < 16:  # –û–≤—É–ª—è—Ü–∏—è - —Å–∞–º–∞—è –≤–∞–∂–Ω–∞—è
            color = (255, 255, 255)  # –ë–µ–ª—ã–π
            size_dot = 12
        else:  # –õ—é—Ç–µ–∏–Ω–æ–≤–∞—è
            color = (255, 255, 255)  # –ë–µ–ª—ã–π
            size_dot = 6
        
        x = center + cycle_radius * math.cos(angle)
        y = center + cycle_radius * math.sin(angle)
        
        # –†–∏—Å—É–µ–º —Ç–æ—á–∫—É —Å –æ–±–≤–æ–¥–∫–æ–π
        draw.ellipse([x - size_dot//2 - 1, y - size_dot//2 - 1, 
                      x + size_dot//2 + 1, y + size_dot//2 + 1], 
                    fill=(100, 100, 100))  # –¢–µ–º–Ω–∞—è –æ–±–≤–æ–¥–∫–∞
        draw.ellipse([x - size_dot//2, y - size_dot//2, 
                      x + size_dot//2, y + size_dot//2], 
                    fill=color)
    
    # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª - —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ü–≤–µ—Ç–æ–∫/–∑–≤–µ–∑–¥–∞
    inner_radius = 60
    
    # –†–∏—Å—É–µ–º 8 –ª–µ–ø–µ—Å—Ç–∫–æ–≤/–ª—É—á–µ–π
    for i in range(8):
        angle = i * (math.pi / 4)
        
        # –í–Ω–µ—à–Ω—è—è —Ç–æ—á–∫–∞
        outer_x = center + inner_radius * math.cos(angle)
        outer_y = center + inner_radius * math.sin(angle)
        
        # –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ç–æ—á–∫–∞
        inner_x = center + (inner_radius * 0.5) * math.cos(angle)
        inner_y = center + (inner_radius * 0.5) * math.sin(angle)
        
        # –†–∏—Å—É–µ–º –ª–µ–ø–µ—Å—Ç–æ–∫ –∫–∞–∫ —ç–ª–ª–∏–ø—Å
        draw.ellipse([outer_x - 15, outer_y - 8, outer_x + 15, outer_y + 8], 
                    fill=(255, 255, 255, 255))
    
    # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∫—Ä—É–≥
    draw.ellipse([center - 25, center - 25, center + 25, center + 25], 
                fill=(255, 255, 255, 255))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    # –õ—É–Ω–∞ –≤ —É–≥–ª—É
    moon_x = center - 180
    moon_y = center - 180
    draw.ellipse([moon_x - 20, moon_y - 20, moon_x + 20, moon_y + 20], 
                fill=(255, 255, 255, 200))
    
    # –ù–µ—Å–∫–æ–ª—å–∫–æ –º–∞–ª–µ–Ω—å–∫–∏—Ö –∑–≤–µ–∑–¥
    stars = [(center + 160, center - 140, 5), (center + 180, center + 120, 4), 
             (center - 160, center + 100, 6), (center - 180, center - 100, 4)]
    
    for star_x, star_y, star_size in stars:
        draw.ellipse([star_x - star_size, star_y - star_size, 
                      star_x + star_size, star_y + star_size], 
                    fill=(255, 255, 255, 180))
    
    return img

def create_emoji_style_avatar():
    """–°–æ–∑–¥–∞–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫—É –≤ —Å—Ç–∏–ª–µ —ç–º–æ–¥–∑–∏"""
    
    size = 512
    img = Image.new('RGB', (size, size), (255, 182, 193))
    draw = ImageDraw.Draw(img)
    
    center = size // 2
    
    # –ü—Ä–æ—Å—Ç–æ–π –≥—Ä–∞–¥–∏–µ–Ω—Ç
    for i in range(size):
        for j in range(size):
            distance = math.sqrt((i - center)**2 + (j - center)**2)
            if distance < center:
                ratio = distance / center
                r = int(255 - ratio * 60)
                g = int(182 - ratio * 60)
                b = int(193 + ratio * 30)
                
                r = max(0, min(255, r))
                g = max(0, min(255, g))
                b = max(0, min(255, b))
                
                img.putpixel((i, j), (r, g, b))
    
    # –ë–æ–ª—å—à–æ–π —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª - —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ/—Ü–≤–µ—Ç–æ–∫
    heart_size = 120
    
    # –†–∏—Å—É–µ–º —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ
    # –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å - –¥–≤–∞ –∫—Ä—É–≥–∞
    left_circle = (center - heart_size//3, center - heart_size//2)
    right_circle = (center + heart_size//3, center - heart_size//2)
    
    draw.ellipse([left_circle[0] - heart_size//4, left_circle[1] - heart_size//4,
                  left_circle[0] + heart_size//4, left_circle[1] + heart_size//4], 
                fill=(255, 255, 255))
    
    draw.ellipse([right_circle[0] - heart_size//4, right_circle[1] - heart_size//4,
                  right_circle[0] + heart_size//4, right_circle[1] + heart_size//4], 
                fill=(255, 255, 255))
    
    # –ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å - —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫
    triangle_points = [
        (center - heart_size//2, center - heart_size//4),
        (center + heart_size//2, center - heart_size//4),
        (center, center + heart_size//2)
    ]
    draw.polygon(triangle_points, fill=(255, 255, 255))
    
    # –ú–∞–ª–µ–Ω—å–∫–∏–µ —Ç–æ—á–∫–∏ –≤–æ–∫—Ä—É–≥
    for i in range(12):
        angle = i * (math.pi / 6)
        x = center + 160 * math.cos(angle)
        y = center + 160 * math.sin(angle)
        draw.ellipse([x - 4, y - 4, x + 4, y + 4], fill=(255, 255, 255))
    
    return img

def main():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç—ã–µ –∞–≤–∞—Ç–∞—Ä–∫–∏"""
    
    print("üé® –°–æ–∑–¥–∞—é –ø—Ä–æ—Å—Ç—ã–µ –∞–≤–∞—Ç–∞—Ä–∫–∏ –¥–ª—è Telegram...")
    
    avatars = [
        ('simple', create_simple_avatar, '–ü—Ä–æ—Å—Ç–∞—è –∞–≤–∞—Ç–∞—Ä–∫–∞ —Å —Ü–∏–∫–ª–æ–º'),
        ('emoji_style', create_emoji_style_avatar, '–°—Ç–∏–ª—å —ç–º–æ–¥–∑–∏')
    ]
    
    for name, func, description in avatars:
        try:
            img = func()
            img.save(f'avatars/{name}.png')
            img.save(f'avatars/{name}.jpg', 'JPEG', quality=95)
            print(f"‚úÖ {description} - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫ {name}.png –∏ {name}.jpg")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ {name}: {e}")
    
    print("\nüéâ –ü—Ä–æ—Å—Ç—ã–µ –∞–≤–∞—Ç–∞—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω—ã!")
    print("üìÅ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å simple.png –∏–ª–∏ emoji_style.png")

if __name__ == "__main__":
    main()
